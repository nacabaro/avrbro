{"version":3,"file":"avrbro.modern.js","sources":["../src/boards.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../src/hex-parser.js","../src/stk500v1/constants.js","../src/stk500v1/stk500-io.js","../src/utils.js","../src/stk500v1/stk500.js","../src/index.js"],"sourcesContent":["/**\n* Grabbed on https://github.com/noopkat/avrgirl-arduino\n*/\n\nexport const boards = [\n  {\n    name: 'uno',\n    baud: 115200,\n    signature: [0x1e, 0x95, 0x0f],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productId: ['0x0043', '0x7523', '0x0001', '0xea60'],\n    productPage: 'https://store.arduino.cc/arduino-uno-rev3',\n    protocol: 'stk500v1'\n  },\n  {\n    name: 'micro',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x0037', '0x8037', '0x0036', '0x0237'],\n    productPage: 'https://store.arduino.cc/arduino-micro',\n    protocol: 'avr109'\n  },\n  {\n    name: 'imuduino',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x0036', '0x8037', '0x8036'],\n    productPage: 'https://www.kickstarter.com/projects/1265095814/imuduino-wireless-3d-motion-html-js-apps-arduino-p?lang=de',\n    protocol: 'avr109'\n  },\n  {\n    name: 'leonardo',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x0036', '0x8036', '0x800c'],\n    productPage: 'https://store.arduino.cc/leonardo',\n    protocol: 'avr109'\n  },\n  {\n    name: 'arduboy',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x0036', '0x8036', '0x800c'],\n    productPage: 'https://arduboy.com/',\n    protocol: 'avr109'\n  },\n  {\n    name: 'feather',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x800c', '0x000c'],\n    productPage: 'https://www.adafruit.com/feather',\n    protocol: 'avr109'\n  },\n  {\n    name: 'little-bits',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x0036', '0x8036'],\n    productPage: 'https://littlebits.com/collections/bits-and-accessories/products/arduino-bit',\n    protocol: 'avr109'\n  },\n  {\n    name: 'blend-micro',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x2404'],\n    productPage: 'https://redbear.cc/product/retired/blend-micro.html',\n    protocol: 'avr109'\n  },\n  {\n    name: 'nano',\n    baud: 57600,\n    signature: [0x1e, 0x95, 0x0f],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productId: ['0x6001', '0x7523'],\n    productPage: 'https://web.archive.org/web/20150813095112/https://www.arduino.cc/en/Main/ArduinoBoardNano',\n    protocol: 'stk500v1'\n  },\n  {\n    name: 'nano (new bootloader)',\n    baud: 115200,\n    signature: [0x1e, 0x95, 0x0f],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productId: ['0x6001', '0x7523'],\n    productPage: 'https://store.arduino.cc/arduino-nano',\n    protocol: 'stk500v1'\n  },\n  {\n    name: 'duemilanove168',\n    baud: 19200,\n    signature: [0x1e, 0x94, 0x06],\n    pageSize: 128,\n    numPages: 128,\n    timeout: 400,\n    productId: ['0x6001'],\n    productPage: 'https://www.arduino.cc/en/Main/arduinoBoardDuemilanove',\n    protocol: 'stk500v1'\n  },\n  {\n    name: 'duemilanove328',\n    baud: 57600,\n    signature: [0x1e, 0x95, 0x14],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productId: ['0x6001'],\n    productPage: 'https://www.arduino.cc/en/Main/arduinoBoardDuemilanove',\n    protocol: 'stk500v1'\n  },\n  // the alias is here because of an accidental naming change of the tinyduino\n  // keeping in for backwards compatibility (SHA 05d65842)\n  {\n    name: 'tinyduino',\n    baud: 57600,\n    signature: [0x1e, 0x95, 0x0f],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productId: ['0x6015'],\n    productPage: 'https://tinycircuits.com/pages/tinyduino-overview',\n    protocol: 'stk500v1',\n    aliases: ['tinduino']\n  },\n  {\n    name: 'mega',\n    baud: 115200,\n    signature: [0x1e, 0x98, 0x01], // ATmega2560\n    pageSize: 256,\n    delay1: 10,\n    delay2: 1,\n    timeout:0xc8,\n    stabDelay:0x64,\n    cmdexeDelay:0x19,\n    synchLoops:0x20,\n    byteDelay:0x00,\n    pollValue:0x53,\n    pollIndex:0x03,\n    productId: ['0x0042', '0x6001', '0x0010', '0x7523'],\n    productPage: 'https://store.arduino.cc/mega-2560-r3',\n    protocol: 'stk500v2'\n  },\n  {\n    name: 'adk',\n    baud: 115200,\n    signature: [0x1e, 0x98, 0x01], // ATmega2560\n    pageSize: 256,\n    delay1: 10,\n    delay2: 1,\n    timeout:0xc8,\n    stabDelay:0x64,\n    cmdexeDelay:0x19,\n    synchLoops:0x20,\n    byteDelay:0x00,\n    pollValue:0x53,\n    pollIndex:0x03,\n    productId: ['0x0044', '0x6001', '0x003F'],\n    productPage: 'https://store.arduino.cc/arduino-mega-adk-rev3',\n    protocol: 'stk500v2'\n  },\n  {\n    name: 'sf-pro-micro',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x9206', '0x9205'],\n    productPage: 'https://www.sparkfun.com/products/12640',\n    protocol: 'avr109'\n  },\n  {\n    name: 'pro-mini',\n    baud: 57600,\n    signature: [0x1e, 0x95, 0x0f],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productPage: 'https://store.arduino.cc/arduino-pro-mini',\n    protocol: 'stk500v1'\n  },\n  {\n    name: 'qduino',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x516d', '0x514d'],\n    productPage: 'https://www.sparkfun.com/products/13614',\n    protocol: 'avr109'\n  },\n  {\n    name: 'pinoccio',\n    baud: 115200,\n    signature: [0x1e, 0xa8, 0x02], // ATmega256RFR2\n    pageSize: 256,\n    delay1: 10,\n    delay2: 1,\n    timeout:0xc8,\n    stabDelay:0x64,\n    cmdexeDelay:0x19,\n    synchLoops:0x20,\n    byteDelay:0x00,\n    pollValue:0x53,\n    pollIndex:0x03,\n    productId: ['0x6051'],\n    productPage: 'https://www.mouser.de/new/crowd-supply/crowd-supply-pinoccio-microcontroller/',\n    protocol: 'stk500v2'\n  },\n  {\n    name: 'lilypad-usb',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x9207', '0x9208', '0x1B4F'],\n    productPage: 'https://www.sparkfun.com/products/12049',\n    protocol: 'avr109'\n  },\n  {\n    name: 'yun',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x0041', '0x8041'],\n    productPage: 'https://store.arduino.cc/arduino-yun',\n    protocol: 'avr109'\n  },\n  {\n    name: 'esplora',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x003C', '0x803C'],\n    productPage: 'https://store.arduino.cc/arduino-esplora',\n    protocol: 'avr109'\n  },\n  {\n    name: 'circuit-playground-classic',\n    baud: 57600,\n    signature: [0x43, 0x41, 0x54, 0x45, 0x52, 0x49, 0x4e],\n    productId: ['0x0011', '0x8011'],\n    productPage: 'https://www.adafruit.com/product/3000',\n    protocol: 'avr109'\n  },\n  /** BQ - Arduino Based Boards. Used in Bitbloq -> bitbloq.bq.com and Arduino IDE*/\n  {\n    name: 'zumjunior',\n    baud: 115200,\n    signature: [0x1e, 0x95, 0x0f],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productId: ['0xEA60'],\n    productPage: 'https://store-de.bq.com/de/zum-kit-junior',\n    protocol: 'stk500v1'\n  },\n  {\n    name: 'zumcore2',\n    baud: 115200,\n    signature: [0x1e, 0x95, 0x0f],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productId: ['0xEA60'],\n    productPage: 'https://www.bq.com/de/zum-core-2-0',\n    protocol: 'stk500v1'\n  },\n  {\n    name: 'bqZum',\n    baud: 19200,\n    signature: [0x1e, 0x95, 0x0f],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productId: ['0x6001', '0x7523'],\n    productPage: 'http://diwo.bq.com/zum-bt-328-especificaciones-tecnicas/',\n    protocol: 'stk500v1'\n  },\n  /** END OF BQ - Arduino Based Boards. Used in Bitbloq -> bitbloq.bq.com and Arduino IDE*/\n\n  /** START OF Spark Concepts Boards - Arduino Based CNC Controller but uses Atmega328pb (Note 'pb' not 'p' = different signature) https://github.com/Spark-Concepts/xPro-V4 */\n  {\n    name: 'xprov4',\n    baud: 115200,\n    signature: [0x1e, 0x95, 0x16],\n    pageSize: 128,\n    numPages: 256,\n    timeout: 400,\n    productId: ['0x0043', '0x7523', '0x0001', '0xea60'],\n    productPage: 'http://www.spark-concepts.com/cnc-xpro-v4-controller/',\n    protocol: 'stk500v1'\n  },\n]\n\n/**\n * Get a board object by name\n */\nexport const getBoard = (name) => {\n  const filtered = boards.filter(b => (b.name === name || (b.aliases && b.aliases.indexOf(name) !== -1)))\n  if (!filtered || filtered.length === 0) {\n    throw new Error(`no board named '${name}' was found!`)\n  }\n  if (filtered.length > 1) {\n    throw new Error(`several boards named '${name}' were found!`)\n  }\n  return filtered[0]\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","/**\n* Grabbed on https://github.com/bminer/intel-hex.js\n*/\n\nimport { Buffer } from '../node_modules/buffer'\n\n//Intel Hex record types\nconst DATA = 0,\n  END_OF_FILE = 1,\n  EXT_SEGMENT_ADDR = 2,\n  START_SEGMENT_ADDR = 3,\n  EXT_LINEAR_ADDR = 4,\n  START_LINEAR_ADDR = 5,\n  EMPTY_VALUE = 0xFF\n\n/* intel_hex.parse(data)\n  `data` - Intel Hex file (string in ASCII format or Buffer Object)\n  `bufferSize` - the size of the Buffer containing the data (optional)\n  \n  returns an Object with the following properties:\n    - data - data as a Buffer Object, padded with 0xFF\n      where data is empty.\n    - startSegmentAddress - the address provided by the last\n      start segment address record; null, if not given\n    - startLinearAddress - the address provided by the last\n      start linear address record; null, if not given\n  Special thanks to: http://en.wikipedia.org/wiki/Intel_HEX\n*/\nexport const parseIntelHex = (data, bufferSize) => {\n  if (data instanceof Buffer) {\n    data = data.toString('ascii')\n  }\n  //Initialization\n  let buf = Buffer.alloc(bufferSize || 8192),\n    bufLength = 0, //Length of data in the buffer\n    highAddress = 0, //upper address\n    startSegmentAddress = null,\n    startLinearAddress = null,\n    lineNum = 0, //Line number in the Intel Hex string\n    pos = 0 //Current position in the Intel Hex string\n  const SMALLEST_LINE = 11\n  while (pos + SMALLEST_LINE <= data.length) {\n    //Parse an entire line\n    if (data.charAt(pos++) !== ':') {\n      throw new Error(`Line ${lineNum+1} does not start with a colon (:).`)\n    } else {\n      lineNum++\n    }\n    //Number of bytes (hex digit pairs) in the data field\n    const dataLength = parseInt(data.substr(pos, 2), 16)\n    pos += 2\n    //Get 16-bit address (big-endian)\n    const lowAddress = parseInt(data.substr(pos, 4), 16)\n    pos += 4\n    //Record type\n    const recordType = parseInt(data.substr(pos, 2), 16)\n    pos += 2\n    //Data field (hex-encoded string)\n    const dataField = data.substr(pos, dataLength * 2)\n    const dataFieldBuf = Buffer.from(dataField, 'hex')\n    pos += dataLength * 2\n    //Checksum\n    const checksum = parseInt(data.substr(pos, 2), 16)\n    pos += 2\n    //Validate checksum\n    let calcChecksum = (dataLength + (lowAddress >> 8) + lowAddress + recordType) & 0xFF\n    for (let i = 0; i < dataLength; i++) {\n      calcChecksum = (calcChecksum + dataFieldBuf[i]) & 0xFF\n    }\n    calcChecksum = (0x100 - calcChecksum) & 0xFF\n    if (checksum !== calcChecksum) {\n      throw new Error(`Invalid checksum on line ${lineNum}: got ${checksum}, but expected ${calcChecksum}`)\n    }\n    //Parse the record based on its recordType\n    switch (recordType) {\n      case DATA:\n        const absoluteAddress = highAddress + lowAddress\n        //Expand buf, if necessary\n        if (absoluteAddress + dataLength >= buf.length) {\n          let tmp = Buffer.alloc((absoluteAddress + dataLength) * 2)\n          buf.copy(tmp, 0, 0, bufLength)\n          buf = tmp\n        }\n        //Write over skipped bytes with EMPTY_VALUE\n        if (absoluteAddress > bufLength) {\n          buf.fill(EMPTY_VALUE, bufLength, absoluteAddress)\n        }\n        //Write the dataFieldBuf to buf\n        dataFieldBuf.copy(buf, absoluteAddress)\n        bufLength = Math.max(bufLength, absoluteAddress + dataLength)\n        break\n      case END_OF_FILE:\n        if (dataLength !== 0) {\n          throw new Error(`Invalid EOF record on line ${lineNum}.`)\n        }\n        return {\n          data: buf.slice(0, bufLength),\n          startSegmentAddress,\n          startLinearAddress\n        }\n      case EXT_SEGMENT_ADDR:\n        if (dataLength !== 2 || lowAddress !== 0) {\n          throw new Error(`Invalid extended segment address record on line ${lineNum}.`)\n        }\n        highAddress = parseInt(dataField, 16) << 4\n        break\n      case START_SEGMENT_ADDR:\n        if (dataLength !== 4 || lowAddress !== 0) {\n          throw new Error(`Invalid start segment address record on line ${lineNum}.`)\n        }\n        startSegmentAddress = parseInt(dataField, 16)\n        break\n      case EXT_LINEAR_ADDR:\n        if (dataLength !== 2 || lowAddress !== 0) {\n          throw new Error(`Invalid extended linear address record on line ${lineNum}.`)\n        }\n        highAddress = parseInt(dataField, 16) << 16\n        break\n      case START_LINEAR_ADDR:\n        if(dataLength !== 4 || lowAddress !== 0) {\n          throw new Error(`Invalid start linear address record on line ${lineNum}.`)\n        }\n        startLinearAddress = parseInt(dataField, 16)\n        break\n      default:\n        throw new Error(`Invalid record type (${recordType}) on line ${lineNum}.`)\n    }\n    //Advance to the next line\n    if (data.charAt(pos) === '\\r') {\n      pos++\n    }\n    if (data.charAt(pos) === '\\n') {\n      pos++\n    }\n  }\n  throw new Error(`Unexpected end of input: missing or invalid EOF record.`)\n}","import { Buffer } from '../../node_modules/buffer'\n\nconst Resp_STK_INSYNC = 0x14\nconst Resp_STK_OK = 0x10\n\n\nexport default {\n  Cmnd_STK_GET_SYNC: 0x30,\n  Cmnd_STK_SET_DEVICE: 0x42,\n  Cmnd_STK_ENTER_PROGMODE: 0x50,\n  Cmnd_STK_LOAD_ADDRESS: 0x55,\n  Cmnd_STK_PROG_PAGE: 0x64,\n  Cmnd_STK_LEAVE_PROGMODE: 0x51,\n  Cmnd_STK_READ_SIGN: 0x75,\n\n  Sync_CRC_EOP: 0x20,\n\n  Resp_STK_OK: 0x10,\n  Resp_STK_INSYNC: 0x14,\n  Resp_STK_NOSYNC: 0x15,\n\n\n  Cmnd_STK_READ_PAGE: 0x74,\n\n\n  OK_RESPONSE: Buffer.from([Resp_STK_INSYNC, Resp_STK_OK])\n};\n","import { Buffer } from '../../node_modules/buffer'\nimport { bufferEqual } from '../utils'\nimport Statics from './constants'\n\nexport const receiveData = async (reader, timeout, responseLength) => {\n  const startingBytes = [Statics.Resp_STK_INSYNC]\n  \n  let buffer = Buffer.alloc(0)\n  let started = false\n  let timeoutId = null\n  let isReading = false\n  let error = null\n\n  const finished = (err) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    isReading = false\n    error = err\n  }\n\n  const handleChunk = (data) => {\n    let index = 0\n    while (!started && index < data.length) {\n      const byte = data[index]\n      if (startingBytes.indexOf(byte) !== -1) {\n        data = data.slice(index, data.length - index)\n        started = true\n      }\n      index++\n    }\n    if (started) {\n      buffer = Buffer.concat([buffer, data])\n    }\n    if (buffer.length > responseLength) {\n      finished(new Error(`buffer overflow ${buffer.length} > ${responseLength}`))\n    } else if (buffer.length == responseLength) {\n      finished()\n    }\n  }\n\n  if (timeout && timeout > 0) {\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      finished(new Error(`receiveData timeout after ${timeout}ms`))\n    }, timeout)\n  }\n\n  if (reader) {\n    isReading = true\n    while (isReading) {\n      try {\n        const { value, done } = await reader.read()\n        if (done) {\n          break\n        }\n        handleChunk(value)\n      } catch (err) {\n        throw err\n      }\n    }\n    if (error) {\n      throw error\n    }\n    return buffer\n  } else {\n    throw new Error(`serial port not found`)\n  }\n}\n\nexport const sendCommand = async ({ reader, writer }, opt) => {\n  const timeout = opt.timeout || 0\n  let responseData = null\n  let responseLength = 0\n\n  if (opt.responseData && opt.responseData.length > 0) {\n    responseData = opt.responseData\n  }\n  if (responseData) {\n    responseLength = responseData.length\n  }\n  if (opt.responseLength) {\n    responseLength = opt.responseLength\n  }\n  let cmd = opt.cmd\n  if (cmd instanceof Array) {\n    cmd = Buffer.from(cmd.concat(Statics.Sync_CRC_EOP))\n  }\n  if (reader && writer) {\n    try {\n      writer.write(cmd)\n    } catch(err) {\n      throw new Error(`Sending ${cmd.toString('hex')} : {err.message}`)\n    }\n    try {\n      const data = await receiveData(reader, timeout, responseLength)\n      if (responseData && !bufferEqual(data, responseData)) {\n        throw new Error(`${cmd} response mismatch: ${data.toString('hex')}, ${responseData.toString('hex')}`)\n      }\n      return data\n    } catch (err) {\n      throw new Error(`Sending ${cmd.toString('hex')}: ${err.message}`)\n    }\n  } else {\n    throw new Error(`serial port not found`)\n  }\n}\n","/**\n* Grabbed on https://github.com/substack/node-buffer-equal\n*/\n\nimport { Buffer } from '../node_modules/buffer'\n\nexport const bufferEqual = (a, b) => {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return undefined\n  }\n  if (typeof a.equals === 'function') {\n    return a.equals(b)\n  }\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n  return true\n}","import { Buffer } from '../../node_modules/buffer'\nimport { bufferEqual } from '../utils'\nimport { sendCommand } from './stk500-io'\nimport Statics from './constants'\n\nexport const sync = async (serial, attempts, {timeout, debug}) => {\n  debug && console.log('sync')\n\n  const opt = {\n    cmd: [Statics.Cmnd_STK_GET_SYNC],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n\n  let tries = 0\n\n  while (tries <= attempts) {\n    tries += 1\n    try {\n      const result = await sendCommand(serial, opt)\n      debug && console.log('sync complete', result, tries)\n      return result\n    } catch (err) {\n      console.log(err)\n    }\n    if (tries <= attempts) {\n      debug && console.log(`failed! will try again (${tries})`)\n    }\n  }\n  throw new Error(`Sync failed after ${attempts} attempts`)\n}\n\nconst checkIfSignatureMatchesOneOfTheMicrosOnTheList = (receivedData) => {\n  const signature328p = [0x1e, 0x95, 0x0f]\n  const signature328pb = [0x1e, 0x95, 0x16]\n\n  let receivedSignature = receivedData.slice(1, -1);\n  const is328p = signature328p.length === receivedSignature.length && signature328p.every((val, index) => val === receivedSignature[index]);\n  const is328pb = signature328pb.length === receivedSignature.length && signature328pb.every((val, index) => val === receivedSignature[index]);\n\n  return is328p || is328pb;\n}\n\nconst verifySignature = async (serial, signature, {timeout, debug}) => {\n  debug && console.log('verify signature')\n\n  const match = Buffer.concat([\n    Buffer.from([Statics.Resp_STK_INSYNC]),\n    signature,\n    Buffer.from([Statics.Resp_STK_OK])\n  ])\n\n  const opt = {\n    cmd: [Statics.Cmnd_STK_READ_SIGN],\n    responseLength: match.length,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    if (data) {\n      debug && console.log('confirm signature', data, data.toString('hex'))\n    } else {\n      debug && console.log('confirm signature', 'no data')\n    }\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst getSignature = async (serial, {timeout, debug}) => {\n  debug && console.log('get signature')\n\n  const opt = {\n    cmd: [Statics.Cmnd_STK_READ_SIGN],\n    responseLength: 5,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    debug && console.log('getSignature', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst setOptions = async (serial, options, {timeout, debug}) => {\n  debug && console.log('set device')  \n  const opt = {\n    cmd: [\n      Statics.Cmnd_STK_SET_DEVICE,\n      options.devicecode || 0,\n      options.revision || 0,\n      options.progtype || 0,\n      options.parmode || 0,\n      options.polling || 0,\n      options.selftimed || 0,\n      options.lockbytes || 0,\n      options.fusebytes || 0,\n      options.flashpollval1 || 0,\n      options.flashpollval2 || 0,\n      options.eeprompollval1 || 0,\n      options.eeprompollval2 || 0,\n      options.pagesizehigh || 0,\n      options.pagesizelow || 0,\n      options.eepromsizehigh || 0,\n      options.eepromsizelow || 0,\n      options.flashsize4 || 0,\n      options.flashsize3 || 0,\n      options.flashsize2 || 0,\n      options.flashsize1 || 0\n    ],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    debug && console.log('setOptions', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst enterProgrammingMode = async (serial, {timeout, debug}) => {\n  debug && console.log('send enter programming mode')\n  const opt = {\n    cmd: [Statics.Cmnd_STK_ENTER_PROGMODE],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    debug && console.log('sent enter programming mode', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst loadAddress = async (serial, useaddr, {timeout, debug}) => {\n  debug && console.log('load address')\n  const addr_low = useaddr & 0xff\n  const addr_high = (useaddr >> 8) & 0xff\n  const opt = {\n    cmd: [\n      Statics.Cmnd_STK_LOAD_ADDRESS,\n      addr_low,\n      addr_high\n    ],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    debug && console.log('loaded address', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst loadPage = async (serial, writeBytes, {timeout, debug}) => {\n  debug && console.log('load page')\n  const bytes_low = writeBytes.length & 0xff\n  const bytes_high = writeBytes.length >> 8\n\n  const cmd = Buffer.concat([\n    Buffer.from([Statics.Cmnd_STK_PROG_PAGE, bytes_high, bytes_low, 0x46]),\n    writeBytes,\n    Buffer.from([Statics.Sync_CRC_EOP])\n  ])\n\n  const opt = {\n    responseData: Statics.OK_RESPONSE,\n    cmd,\n    timeout\n  }\n\n  try {\n    const data = await sendCommand(serial, opt)\n    debug && console.log('loaded page', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst upload = async (serial, hex, options) => {\n  const {timeout, debug, pageSize} = options\n\n  debug && console.log('program')\n  let pageaddr = 0\n  let writeBytes\n  let useaddr\n\n  try {\n    while (pageaddr < hex.length) {\n      debug && console.log('program page')\n      useaddr = pageaddr >> 1\n      await loadAddress(serial, useaddr, options)\n      writeBytes = hex.slice(pageaddr, (hex.length > pageSize ? (pageaddr + pageSize) : hex.length - 1))\n      await loadPage(serial, writeBytes, options)\n      debug && console.log('programmed page')\n      pageaddr =  pageaddr + writeBytes.length\n      await new Promise((resolve) => setTimeout(resolve, 4))\n      debug && console.log('page done')\n    }   \n  } catch (err) {\n    throw err\n  }\n  debug && console.log('upload done')\n  return true\n}\n\nconst exitProgrammingMode = async (serial, {timeout, debug}) => {\n  debug && console.log('send leave programming mode')\n  const opt = {\n    cmd: [Statics.Cmnd_STK_LEAVE_PROGMODE],\n    responseData: Statics.OK_RESPONSE,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    debug && console.log('sent leave programming mode', data)\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nconst verify = async (serial, hex, options) => {\n  const {timeout, debug, pageSize} = options\n\n  debug && console.log('verify')\n  let pageaddr = 0\n  let writeBytes\n  let useaddr\n\n  try {\n    while (pageaddr < hex.length) {\n      debug && console.log('verify page')\n      useaddr = pageaddr >> 1\n      await loadAddress(serial, useaddr, options)\n      writeBytes = hex.slice(pageaddr, (hex.length > pageSize ? (pageaddr + pageSize) : hex.length - 1))\n      await verifyPage(serial, writeBytes, options)\n      debug && console.log('verified page')\n      pageaddr =  pageaddr + writeBytes.length\n      await new Promise((resolve) => setTimeout(resolve, 4))\n      debug && console.log('page done')\n    }   \n  } catch (err) {\n    throw err\n  }\n  debug && console.log('verify done')\n  return true\n}\n\nconst verifyPage = async (serial, writeBytes, options) => {\n  const {pageSize, timeout, debug} = options\n  \n  debug && console.log('verify page')\n  const match = Buffer.concat([\n    Buffer.from([Statics.Resp_STK_INSYNC]),\n    writeBytes,\n    Buffer.from([Statics.Resp_STK_OK])\n  ])\n  const size = writeBytes.length >= pageSize ? pageSize : writeBytes.length\n  const opt = {\n    cmd: [\n      Statics.Cmnd_STK_READ_PAGE,\n      (size>>8) & 0xff,\n      size & 0xff,\n      0x46\n    ],\n    responseLength: match.length,\n    timeout\n  }\n  try {\n    const data = await sendCommand(serial, opt)\n    debug && console.log('confirm page', data, data.toString('hex'))\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\nexport const bootload = async (serial, hex, opt) => {\n  const parameters = {\n    pagesizehigh: (opt.pagesizehigh<<8 & 0xff),\n    pagesizelow: opt.pagesizelow & 0xff\n  }\n\n  try {\n    // send two dummy syncs like avrdude does\n    await sync(serial, 3, opt)\n    await sync(serial, 3, opt)\n    await sync(serial, 3, opt)\n    const sign = Buffer.from(opt.signature)\n    const signature = await verifySignature(serial, sign, opt)\n    if (!checkIfSignatureMatchesOneOfTheMicrosOnTheList(signature)) return false;    \n    await setOptions(serial, parameters, opt)\n    await enterProgrammingMode(serial, opt)\n    await upload(serial, hex, opt)\n    await verify(serial, hex, opt)\n    await exitProgrammingMode(serial, opt)\n  } catch (err) {\n    throw err\n  }\n  return true\n}\n\nexport const getAVRSignature = async (serial) => {\n  const opts = {\n    timeout: 30000,\n    debug: true\n  }\n  \n  /*await sync(serial, 3, opts)\n  await sync(serial, 3, opts)\n  await sync(serial, 3, opts)*/\n  const receivedData = await getSignature(serial, opts);\n  let receivedSignature = receivedData.slice(1, -1);\n\n  return receivedSignature;\n}","import * as boardsHelper from './boards'\nimport { parseIntelHex } from './hex-parser'\nimport { bootload, getAVRSignature } from './stk500v1/stk500'\n\n/**\n* Checks if the serial api is available\n* As november 2019 it works only in Chrome with this flag enabled:\n*   chrome://flags/#enable-experimental-web-platform-features\n*/\nconst isAvailable = () => navigator && navigator.serial\n\n/**\n* Allow to parse/check hex file\n*/\nconst parseHex = (buffer) => {\n  const hex = parseIntelHex(buffer).data\n  return hex\n}\n\n/**\n* Open the connection with the serial port\n*/\nconst openSerial = async (options = {}) => {\n  const {\n    baudRate = 57600,\n    filters = null\n  } = options\n\n  // Request an Arduino from the user.\n  try {\n    let port\n    if (filters) {\n      port = await navigator.serial.requestPort(filters)\n    } else {\n      port = await navigator.serial.requestPort()\n    }\n    await port.open({ baudRate })\n    const reader = port.readable.getReader()\n    const writer = port.writable.getWriter()\n    return {port, reader, writer}\n  } catch(e) {\n    console.log(e)\n  }\n  return null\n}\n\n/**\n* Open a serial port previously connected\n*/\nconst reopenSerial = async (options = {}) => {\n  const {\n    baudRate = 57600,\n  } = options\n\n  try {\n    const ports = await navigator.serial.getPorts()\n    console.log(ports)\n    const port = ports[0]\n    console.log(port)\n    await port.open({ baudRate })\n    const reader = port.readable.getReader()\n    const writer = port.writable.getWriter()\n    return {port, reader, writer}\n  } catch (e) {\n    console.log(e)\n  }\n  return null\n}\n\n/**\n* Close the connection with the serial port\n*/\nconst closeSerial = async ({port, reader, writer}) => {\n  writer.releaseLock()\n  reader.releaseLock()\n  await port.close()\n}\n\nconst wait = (duration) => {\n  return new Promise((resolve) => setTimeout(resolve, duration))\n}\n\n/**\n* Reset board with cycle DTR\n*/\nconst reset = async (serial) => {\n  serial.port.setSignals({ requestToSend: true, dataTerminalReady: true })\n  await wait(250)\n  serial.port.setSignals({ requestToSend: false, dataTerminalReady: false })\n  await wait(50)\n}\n\n/**\n* Flash the device connected on the given serial port with the given .hex file buffer.\n* Only works with stk500 version 1 for now...\n*/\nconst flash = async (serial, hexData, options) => {\n  if (!options) {\n    throw new Error(`I need options to do this!`)\n  }\n  const { debug, boardName, ...boardOptions } = options\n  let props = { debug, ...boardOptions }\n  debug && console.log(`will flash .hex file on board...`)\n  if (boardName) {\n    const board = boardsHelper.getBoard(boardName)\n    props = { ...props, ...board }\n  }\n  if (!props.name) {\n    throw new Error('Cannot find board name!')\n  }\n  try {\n    await reset(serial)\n    delay(100);\n    const flashResult = await bootload(serial, hexData, props)\n    debug && console.log(`flash complete successfully`)\n    return flashResult\n  } catch (err) {\n    debug && console.log(`encountered errors during flash :(`)\n    throw err\n  }\n}\n\nconst getBootloaderSignature = async (serial) => {\n  await reset(serial);\n  await delay(50);\n  return await getAVRSignature(serial);\n}\n\nconst avrbro = {\n  isAvailable,\n  openSerial,\n  closeSerial,\n  parseHex,\n  flash,\n  reset,\n  getBootloaderSignature,\n  reopenSerial,\n  boardsHelper\n}\n\nconst delay = (ms) => { return new Promise((resolve, reject) => setTimeout(resolve, ms))}\n\nexport default avrbro\n"],"names":["boards","name","baud","signature","pageSize","numPages","timeout","productId","productPage","protocol","aliases","delay1","delay2","stabDelay","cmdexeDelay","synchLoops","byteDelay","pollValue","pollIndex","getBoard","filtered","filter","b","indexOf","length","Error","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","charCodeAt","encodeChunk","uint8","start","end","num","output","push","join","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","customInspectSymbol","Symbol","for","createBuffer","RangeError","buf","Object","setPrototypeOf","Buffer","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","array","byteOffset","undefined","fromArrayBuffer","valueOf","obj","isBuffer","checked","copy","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","utf16leToBytes","tmp","extraBytes","parts","len2","base64","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","max","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","exports","alloc","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","species","configurable","writable","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","INSPECT_MAX_BYTES","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","leadSurrogate","b64","lens","validLen","getLens","placeHoldersLen","_byteLength","curByte","split","base64clean","src","dst","constructor","table","i16","parseIntelHex","bufferSize","bufLength","highAddress","startSegmentAddress","startLinearAddress","lineNum","charAt","dataLength","lowAddress","recordType","dataField","dataFieldBuf","checksum","calcChecksum","absoluteAddress","Cmnd_STK_GET_SYNC","Cmnd_STK_SET_DEVICE","Cmnd_STK_ENTER_PROGMODE","Cmnd_STK_LOAD_ADDRESS","Cmnd_STK_PROG_PAGE","Cmnd_STK_LEAVE_PROGMODE","Cmnd_STK_READ_SIGN","Sync_CRC_EOP","Resp_STK_OK","Resp_STK_INSYNC","Resp_STK_NOSYNC","Cmnd_STK_READ_PAGE","OK_RESPONSE","sendCommand","async","reader","writer","opt","responseData","responseLength","cmd","Statics","err","startingBytes","started","timeoutId","isReading","finished","clearTimeout","handleChunk","index","setTimeout","done","receiveData","bufferEqual","message","sync","serial","attempts","debug","tries","result","loadAddress","useaddr","loadPage","writeBytes","verifyPage","options","match","wait","duration","Promise","resolve","reset","port","setSignals","requestToSend","dataTerminalReady","avrbro","isAvailable","navigator","openSerial","baudRate","filters","requestPort","open","readable","getReader","getWriter","closeSerial","releaseLock","close","parseHex","flash","hexData","boardName","props","_extends","_objectWithoutPropertiesLoose","_excluded","boardsHelper","delay","flashResult","hex","parameters","pagesizehigh","pagesizelow","sign","receivedData","signature328p","signature328pb","receivedSignature","is328p","every","is328pb","checkIfSignatureMatchesOneOfTheMicrosOnTheList","verifySignature","devicecode","revision","progtype","parmode","polling","selftimed","lockbytes","fusebytes","flashpollval1","flashpollval2","eeprompollval1","eeprompollval2","eepromsizehigh","eepromsizelow","flashsize4","flashsize3","flashsize2","flashsize1","setOptions","enterProgrammingMode","pageaddr","upload","verify","exitProgrammingMode","bootload","getBootloaderSignature","getSignature","getAVRSignature","reopenSerial","ports","getPorts","ms","reject"],"mappings":"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"}